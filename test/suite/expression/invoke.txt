#!/usr/local/bin/langnd

import ["read", "evaluate", "get"] from core

$testing = $evaluate($read("testing.txt", null))
$returns = $get($testing, "returns")
$throws = $get($testing, "throws")
$parseFails = $get($testing, "parseFails")

$returns(<$function=<> $function()>, null)
$returns(<$function=<null> $function()>, null)
$returns(<$function=<false> $function()>, false)
$returns(<$function=<0> $function()>, 0)
$returns(<$function=<""> $function()>, "")
$returns(<$function=<[]> $function()>, [])
$returns(<$function=<{}> $function()>, {})
$returns(<$function=<<>> $function()>, <>)
$returns(<$function=<null false 0 "" [] {} <>> $function()>, <>)
$returns(<$say=<"hey"> $responses=[null, null, null] import "set" from core $responses=$set($responses, 1, $say()) $responses=$set($responses, 2, $say()) $responses=$set($responses, 3, $say()) $responses>, ["hey", "hey", "hey"])
$returns(<$index=<"first"> $index=<"second"> $index=<"third"> $index()>, "third")
$returns(<$original=<"source"> $copy=$original $copy()>, "source")
$throws(<$function=<$local="value"> $function() $local>, "absent variable")
$throws(<$outer="value" $function=<$outer> $function()>, "absent variable")
$returns(<$outer="created" $function=<$outer="updated"> $function() $outer>, "created")
$throws(<$top=<$bottom=<$local="value"> $bottom() $local> $top()>, "absent variable")
$throws(<$top=<$outer="value" $bottom=<$outer> $bottom()> $top()>, "absent variable")
$returns(<$top=<$outer="created" $bottom=<$outer="updated"> $bottom() $outer> $top()>, "created")

$parseFails("$add(", "(")
$parseFails("$add(,", ",")
$parseFails("$add(,)", ",)")
$parseFails("$merge(\"1\" \"2\")", "\"1\" \"2\")")
$parseFails("$x=\"1\" $y=\"2\" $merge($x $y)", "$x $y)")
$parseFails("$merge($freeze(1) $freeze(2))", ") $freeze(2))")

$throws(<import "add" from core $add()>, "absent argument")
$throws(<import "add" from core $add(1)>, "absent argument")
$throws(<import "add" from core $add(null, 2)>, "alien argument")
$throws(<import "add" from core $add(1, null)>, "alien argument")
$throws(<$huh()>, "absent variable")
$throws(<$value=null $value()>, "invocation error")
$throws(<$value=false $value()>, "invocation error")
$throws(<$value=0 $value()>, "invocation error")
$throws(<$value="" $value()>, "invocation error")
$throws(<$value=[] $value()>, "invocation error")
$throws(<$value={} $value()>, "invocation error")
$throws(<$function=<throw "error"> $function()>, "error")
$throws(<import "evaluate" from core $evaluate("$function=<break \"pick\"> $function()")>, {"message": "failed to execute code", "hint": "lost break"})
$throws(<import "evaluate" from core $evaluate("$function=<continue \"pick\"> $function()")>, {"message": "failed to execute code", "hint": "lost continue"})
