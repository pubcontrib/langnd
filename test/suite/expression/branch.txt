#!/usr/local/bin/langnd

import ["read", "evaluate", "get"] from core

$testing = $evaluate($read("testing.txt", null))
$returns = $get($testing, "returns")
$throws = $get($testing, "throws")
$parseFails = $get($testing, "parseFails")

$returns(<if false \ "hit" />, null)
$returns(<if true \ "hit" />, "hit")
$returns(<if true \ if true \ "hit" / />, "hit")
$returns(<if true \ if false \ "hit" / />, null)
$returns(<if false \ if true \ "hit" / />, null)
$returns(<if false \ if false \ "hit" / />, null)
$returns(<$a=true if $a \ "hit" />, "hit")
$returns(<$a=false if $a \ "hit" />, null)
$returns(<import "cast" from core if $cast("true", "BOOLEAN") \ "hit" />, "hit")
$returns(<import "cast" from core if $cast("false", "BOOLEAN") \ "hit" />, null)
$returns(<import "add" from core $a=0 if true \ $a=$add($a, 1) $a=$add($a, 1) $a=$add($a, 1) / $a>, 3)
$returns(<$msg=if true \ "first" "..." "last" / $msg>, "last")
$returns(<$msg=if false \ "first" "..." "last" / $msg>, null)
$returns(<import "merge" from core $merge("\\", if true \ " /" /)>, "\\ /")
$returns(<if true \ "true" / otherwise \ "false" />, "true")
$returns(<if false \ "true" / otherwise \ "false" />, "false")
$returns(<$msg=if true \ "first" / otherwise \ "second" / $msg>, "first")
$returns(<$msg=if false \ "first" / otherwise \ "second" / $msg>, "second")
$returns(<import "equals" from core $b=1 if $equals($b, 1) \ "first" / else if $equals($b, 2) \ "second" />, "first")
$returns(<import "equals" from core $b=2 if $equals($b, 1) \ "first" / else if $equals($b, 2) \ "second" />, "second")
$returns(<import "equals" from core $b=3 if $equals($b, 1) \ "first" / else if $equals($b, 2) \ "second" />, null)
$returns(<import "equals" from core $b=1 if $equals($b, 1) \ "first" / else if $equals($b, 2) \ "second" / otherwise \ "third" />, "first")
$returns(<import "equals" from core $b=2 if $equals($b, 1) \ "first" / else if $equals($b, 2) \ "second" / otherwise \ "third" />, "second")
$returns(<import "equals" from core $b=3 if $equals($b, 1) \ "first" / else if $equals($b, 2) \ "second" / otherwise \ "third" />, "third")
$returns(<import "set" from core $slots=[0,0,0] if true \ $slots=$set($slots, 1, 1) / if true \ $slots=$set($slots, 2, 2) / if true \ $slots=$set($slots, 3, 3) / $slots>, [1, 2, 3])
$returns(<if if true \ true / \ "hit" />, "hit")
$returns(<if true if true \ "hit" />, "hit")
$returns(<if false \ / else if if true \ true / \ "hit" />, "hit")
$returns(<if false \ / else if true if true \ "hit" />, "hit")
$returns(<if false \ / otherwise if true \ "hit" />, "hit")

$parseFails("if", "if")
$parseFails("if \\ /", "/")
$parseFails("if true", "true")
$parseFails("if true \\", "\\")
$parseFails("if true /", "/")
$parseFails("if true \\ 100", "100")
$parseFails("if true \\ 100 / else", "else")
$parseFails("if true \\ 100 / else \\", "else \\")
$parseFails("if true \\ 100 / else /", "else /")
$parseFails("if true \\ 100 / else \\ 200", "else \\ 200")
$parseFails("if true \\ 100 / else if", "if")
$parseFails("if true \\ 100 / else if true", "true")
$parseFails("if true \\ 100 / else if true \\", "\\")
$parseFails("if true \\ 100 / else if true /", "/")
$parseFails("if true \\ 100 / else if true \\ 200", "200")
$parseFails("if true \\ 100 / else catch \\ /", "else catch \\ /")
$parseFails("if true \\ 100 / otherwise", "otherwise")
$parseFails("if true \\ 100 / otherwise \\", "\\")
$parseFails("if true \\ 100 / otherwise /", "/")
$parseFails("if true \\ 100 / otherwise \\ 200", "200")

$throws(<if null \ />, "alien argument")
$throws(<if 100 \ />, "alien argument")
$throws(<if "text" \ />, "alien argument")
$throws(<if [1, 2, 3] \ />, "alien argument")
$throws(<if {"a": 1, "b": 2, "c": 3} \ />, "alien argument")
$throws(<if <import "multiply" from core $number=argument return $multiply($number, $number)> \ />, "alien argument")
$throws(<if false \ / else if null \ />, "alien argument")
$throws(<if false \ / else if 100 \ />, "alien argument")
$throws(<if false \ / else if "text" \ />, "alien argument")
$throws(<if false \ / else if [1, 2, 3] \ />, "alien argument")
$throws(<if false \ / else if {"a": 1, "b": 2, "c": 3} \ />, "alien argument")
$throws(<if false \ / else if <import "multiply" from core $number=argument return $multiply($number, $number)> \ />, "alien argument")

$throws(<import "divide" from core if true \ "before" $divide(100, 0) "after" />, "arithmetic error")
$throws(<import "divide" from core if $divide(100, 0) \ $missing />, "arithmetic error")
$throws(<import "divide" from core if false \ / else if true \ "before" $divide(100, 0) "after" />, "arithmetic error")
$throws(<import "divide" from core if false \ / else if $divide(100, 0) \ $missing />, "arithmetic error")
