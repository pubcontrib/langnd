#!/usr/local/bin/langnd

import ["read", "evaluate", "get"] from core

$testing = $evaluate($read("testing.txt", null))
$returns = $get($testing, "returns")
$throws = $get($testing, "throws")

$returns(<import "cast" from core $cast(null, "NULL")>, null)
$returns(<import "cast" from core $cast(true, "BOOLEAN")>, true)
$returns(<import "cast" from core $cast("false", "BOOLEAN")>, false)
$returns(<import "cast" from core $cast("true", "BOOLEAN")>, true)
$returns(<import "cast" from core $cast(100, "NUMBER")>, 100)
$returns(<import "cast" from core $cast(null, "STRING")>, "null")
$returns(<import "cast" from core $cast("null", "STRING")>, "null")
$returns(<import "cast" from core $cast(false, "STRING")>, "false")
$returns(<import "cast" from core $cast(true, "STRING")>, "true")
$returns(<import "cast" from core $cast("true", "STRING")>, "true")
$returns(<import "cast" from core $cast(123.456, "STRING")>, "123.455993")
$returns(<import "cast" from core $cast("123.456", "STRING")>, "123.456")
$returns(<import "cast" from core $cast("text", "STRING")>, "text")
$returns(<import "cast" from core $cast([1, 2, 3], "LIST")>, [1, 2, 3])
$returns(<import "cast" from core $cast({"a": 1, "b": 2, "c": 3}, "MAP")>, {"a": 1, "b": 2, "c": 3})
$returns(<import "cast" from core $cast(<import "multiply" from core $number=argument return $multiply($number, $number)>, "FUNCTION")>, <import "multiply" from core $number=argument return $multiply($number, $number)>)

$throws(<import "cast" from core $cast(123.456, "NULL")>, "cast error")
$throws(<import "cast" from core $cast(true, "NULL")>, "cast error")
$throws(<import "cast" from core $cast("text", "NULL")>, "cast error")
$throws(<import "cast" from core $cast([1], "NULL")>, "cast error")
$throws(<import "cast" from core $cast({}, "NULL")>, "cast error")
$throws(<import "cast" from core $cast(<>, "NULL")>, "cast error")
$throws(<import "cast" from core $cast(null, "BOOLEAN")>, "cast error")
$throws(<import "cast" from core $cast(123.456, "BOOLEAN")>, "cast error")
$throws(<import "cast" from core $cast("text", "BOOLEAN")>, "cast error")
$throws(<import "cast" from core $cast([1], "BOOLEAN")>, "cast error")
$throws(<import "cast" from core $cast({}, "BOOLEAN")>, "cast error")
$throws(<import "cast" from core $cast(<>, "BOOLEAN")>, "cast error")
$throws(<import "cast" from core $cast(null, "NUMBER")>, "cast error")
$throws(<import "cast" from core $cast(true, "NUMBER")>, "cast error")
$throws(<import "cast" from core $cast("text", "NUMBER")>, "cast error")
$throws(<import "cast" from core $cast([1], "NUMBER")>, "cast error")
$throws(<import "cast" from core $cast({}, "NUMBER")>, "cast error")
$throws(<import "cast" from core $cast(<>, "NUMBER")>, "cast error")
$throws(<import "cast" from core $cast([1], "STRING")>, "cast error")
$throws(<import "cast" from core $cast({}, "STRING")>, "cast error")
$throws(<import "cast" from core $cast(<>, "STRING")>, "cast error")
$throws(<import "cast" from core $cast(null, "LIST")>, "cast error")
$throws(<import "cast" from core $cast(123.456, "LIST")>, "cast error")
$throws(<import "cast" from core $cast(true, "LIST")>, "cast error")
$throws(<import "cast" from core $cast("text", "LIST")>, "cast error")
$throws(<import "cast" from core $cast({}, "LIST")>, "cast error")
$throws(<import "cast" from core $cast(<>, "LIST")>, "cast error")
$throws(<import "cast" from core $cast(null, "MAP")>, "cast error")
$throws(<import "cast" from core $cast(123.456, "MAP")>, "cast error")
$throws(<import "cast" from core $cast(true, "MAP")>, "cast error")
$throws(<import "cast" from core $cast("text", "MAP")>, "cast error")
$throws(<import "cast" from core $cast([1], "MAP")>, "cast error")
$throws(<import "cast" from core $cast(<>, "MAP")>, "cast error")
$throws(<import "cast" from core $cast(null, "FUNCTION")>, "cast error")
$throws(<import "cast" from core $cast(123.456, "FUNCTION")>, "cast error")
$throws(<import "cast" from core $cast(true, "FUNCTION")>, "cast error")
$throws(<import "cast" from core $cast("text", "FUNCTION")>, "cast error")
$throws(<import "cast" from core $cast([1], "FUNCTION")>, "cast error")
$throws(<import "cast" from core $cast({}, "FUNCTION")>, "cast error")
$throws(<import "cast" from core $cast(null, "WRONG")>, "damaged argument")

$throws(<import "cast" from core $cast(null)>, "absent argument")
$throws(<import "cast" from core $cast(null, null)>, "alien argument")
$throws(<import "cast" from core $cast(null, false)>, "alien argument")
$throws(<import "cast" from core $cast(null, 0)>, "alien argument")
$throws(<import "cast" from core $cast(null, [])>, "alien argument")
$throws(<import "cast" from core $cast(null, {})>, "alien argument")
$throws(<import "cast" from core $cast(null, <>)>, "alien argument")
$throws(<import "cast" from core $cast(false)>, "absent argument")
$throws(<import "cast" from core $cast(false, null)>, "alien argument")
$throws(<import "cast" from core $cast(false, false)>, "alien argument")
$throws(<import "cast" from core $cast(false, 0)>, "alien argument")
$throws(<import "cast" from core $cast(false, [])>, "alien argument")
$throws(<import "cast" from core $cast(false, {})>, "alien argument")
$throws(<import "cast" from core $cast(false, <>)>, "alien argument")
$throws(<import "cast" from core $cast(0)>, "absent argument")
$throws(<import "cast" from core $cast(0, null)>, "alien argument")
$throws(<import "cast" from core $cast(0, false)>, "alien argument")
$throws(<import "cast" from core $cast(0, 0)>, "alien argument")
$throws(<import "cast" from core $cast(0, [])>, "alien argument")
$throws(<import "cast" from core $cast(0, {})>, "alien argument")
$throws(<import "cast" from core $cast(0, <>)>, "alien argument")
$throws(<import "cast" from core $cast("")>, "absent argument")
$throws(<import "cast" from core $cast("", null)>, "alien argument")
$throws(<import "cast" from core $cast("", false)>, "alien argument")
$throws(<import "cast" from core $cast("", 0)>, "alien argument")
$throws(<import "cast" from core $cast("", [])>, "alien argument")
$throws(<import "cast" from core $cast("", {})>, "alien argument")
$throws(<import "cast" from core $cast("", <>)>, "alien argument")
$throws(<import "cast" from core $cast([])>, "absent argument")
$throws(<import "cast" from core $cast([], null)>, "alien argument")
$throws(<import "cast" from core $cast([], false)>, "alien argument")
$throws(<import "cast" from core $cast([], 0)>, "alien argument")
$throws(<import "cast" from core $cast([], [])>, "alien argument")
$throws(<import "cast" from core $cast([], {})>, "alien argument")
$throws(<import "cast" from core $cast([], <>)>, "alien argument")
$throws(<import "cast" from core $cast({})>, "absent argument")
$throws(<import "cast" from core $cast({}, null)>, "alien argument")
$throws(<import "cast" from core $cast({}, false)>, "alien argument")
$throws(<import "cast" from core $cast({}, 0)>, "alien argument")
$throws(<import "cast" from core $cast({}, [])>, "alien argument")
$throws(<import "cast" from core $cast({}, {})>, "alien argument")
$throws(<import "cast" from core $cast({}, <>)>, "alien argument")
$throws(<import "cast" from core $cast(<>)>, "absent argument")
$throws(<import "cast" from core $cast(<>, null)>, "alien argument")
$throws(<import "cast" from core $cast(<>, false)>, "alien argument")
$throws(<import "cast" from core $cast(<>, 0)>, "alien argument")
$throws(<import "cast" from core $cast(<>, [])>, "alien argument")
$throws(<import "cast" from core $cast(<>, {})>, "alien argument")
$throws(<import "cast" from core $cast(<>, <>)>, "alien argument")
