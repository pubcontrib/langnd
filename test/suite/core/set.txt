#!/usr/local/bin/langnd

import ["read", "evaluate", "get"] from core

$testing = $evaluate($read("testing.txt", null))
$returns = $get($testing, "returns")
$throws = $get($testing, "throws")

$returns(<import "set" from core $set("abc", 1, "x")>, "xbc")
$returns(<import "set" from core $set("abc", 2, "x")>, "axc")
$returns(<import "set" from core $set("abc", 3, "x")>, "abx")
$returns(<import "set" from core $set("abc", 1, "")>, "bc")
$returns(<import "set" from core $set("abc", 2, "")>, "ac")
$returns(<import "set" from core $set("abc", 3, "")>, "ab")
$returns(<import "set" from core $set("abc", 1, "123")>, "123bc")
$returns(<import "set" from core $set("abc", 2, "123")>, "a123c")
$returns(<import "set" from core $set("abc", 3, "123")>, "ab123")
$returns(<import "set" from core $set(["a", "b", "c"], 1, "x")>, ["x", "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 2, "x")>, ["a", "x", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 3, "x")>, ["a", "b", "x"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, null)>, [null, "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, false)>, [false, "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, 0)>, [0, "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, "")>, ["", "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, [])>, [[], "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, {})>, [{}, "b", "c"])
$returns(<import "set" from core $set(["a", "b", "c"], 1, <>)>, [<>, "b", "c"])
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", "x")>, {"a": "x", "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "b", "x")>, {"a": 1, "b": "x", "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "c", "x")>, {"a": 1, "b": 2, "c": "x"})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", null)>, {"a": null, "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "d", "x")>, {"a": 1, "b": 2, "c": 3, "d": "x"})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", false)>, {"a": false, "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", 0)>, {"a": 0, "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", "")>, {"a": "", "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", [])>, {"a": [], "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", {})>, {"a": {}, "b": 2, "c": 3})
$returns(<import "set" from core $set({"a": 1, "b": 2, "c": 3}, "a", <>)>, {"a": <>, "b": 2, "c": 3})

$returns(<import "set" from core $list1=["x"] $list2=$set($list1, 1, $list1) $list1>, ["x"])
$returns(<import "set" from core $list1=["x"] $list2=$set($list1, 1, $list1) $list2>, [["x"]])
$returns(<import "set" from core $list=["x"] $list=$set($list, 1, $list) $list>, [["x"]])
$returns(<import "set" from core $map1={"k": "x"} $map2=$set($map1, "k", $map1) $map1>, {"k": "x"})
$returns(<import "set" from core $map1={"k": "x"} $map2=$set($map1, "k", $map1) $map2>, {"k": {"k": "x"}})
$returns(<import "set" from core $map1={"k": "x"} $map2=$set($map1, "m", $map1) $map1>, {"k": "x"})
$returns(<import "set" from core $map1={"k": "x"} $map2=$set($map1, "m", $map1) $map2>, {"k": "x", "m": {"k": "x"}})
$returns(<import "set" from core $map={"k": "x"} $map=$set($map, "k", $map) $map>, {"k": {"k": "x"}})

$throws(<import "set" from core $set("abc", 0, "x")>, "absent key")
$throws(<import "set" from core $set("abc", 4, "x")>, "absent key")
$throws(<import "set" from core $set("abc", 0, "")>, "absent key")
$throws(<import "set" from core $set("abc", 4, "")>, "absent key")
$throws(<import "set" from core $set("abc", 0, "xxx")>, "absent key")
$throws(<import "set" from core $set("abc", 4, "xxx")>, "absent key")
$throws(<import "set" from core $set(["a", "b", "c"], 0, "x")>, "absent key")
$throws(<import "set" from core $set(["a", "b", "c"], 4, "x")>, "absent key")
